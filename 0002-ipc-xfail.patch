Index: strace-5.9/configure
===================================================================
--- strace-5.9.orig/configure	2020-09-24 11:18:58.000000000 +0200
+++ strace-5.9/configure	2020-10-06 19:49:07.708680050 +0200
@@ -678,6 +678,8 @@
 clock_LIBS
 timer_LIBS
 dl_LIBS
+KERNEL_LONG_T_32_BIT_FALSE
+KERNEL_LONG_T_32_BIT_TRUE
 SIZEOF_KERNEL_LONG_T
 SIZEOF_LONG
 ac_ct_AR
@@ -21947,6 +21949,14 @@
 
 SIZEOF_KERNEL_LONG_T="$ac_cv_sizeof_kernel_long_t"
 
+ if test x$SIZEOF_KERNEL_LONG_T == x4; then
+  KERNEL_LONG_T_32_BIT_TRUE=
+  KERNEL_LONG_T_32_BIT_FALSE='#'
+else
+  KERNEL_LONG_T_32_BIT_TRUE='#'
+  KERNEL_LONG_T_32_BIT_FALSE=
+fi
+
 # The cast to long int works around a bug in the HP C Compiler
 # version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
 # declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
@@ -25039,6 +25049,10 @@
   as_fn_error $? "conditional \"am__fastdepCC\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
+if test -z "${KERNEL_LONG_T_32_BIT_TRUE}" && test -z "${KERNEL_LONG_T_32_BIT_FALSE}"; then
+  as_fn_error $? "conditional \"KERNEL_LONG_T_32_BIT\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
 if test -z "${ENABLE_STACKTRACE_TRUE}" && test -z "${ENABLE_STACKTRACE_FALSE}"; then
   as_fn_error $? "conditional \"ENABLE_STACKTRACE\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
Index: strace-5.9/tests-m32/Makefile.in
===================================================================
--- strace-5.9.orig/tests-m32/Makefile.in	2020-10-06 09:48:41.416722064 +0200
+++ strace-5.9/tests-m32/Makefile.in	2020-10-22 04:35:05.329982236 +0200
@@ -6780,10 +6780,30 @@
 	umovestr_cached.test \
 	# end of MISC_TESTS
 
+
+# A temporary workaround for glibc commits
+# 9ebaabeaac1a96b0d91f52902ce1dbf4f5a562dd
+# be9b0b9a012780a403a266c90878efffb9a5f3ca
+# a16d2abd496bd974a88207d5599265aae5ae4880
+TIME64_XFAIL = \
+	ipc_msg.gen.test \
+	ipc_msg-Xabbrev.gen.test \
+	ipc_msg-Xraw.gen.test \
+	ipc_msg-Xverbose.gen.test \
+	ipc_sem.gen.test \
+	ipc_sem-Xabbrev.gen.test \
+	ipc_sem-Xraw.gen.test \
+	ipc_sem-Xverbose.gen.test \
+	ipc_shm.gen.test \
+	ipc_shm-Xabbrev.gen.test \
+	ipc_shm-Xraw.gen.test \
+	ipc_shm-Xverbose.gen.test \
+	# end of TIME64_XFAIL
+
 XFAIL_TESTS_ = 
 XFAIL_TESTS_m32 = $(STACKTRACE_TESTS)
 XFAIL_TESTS_mx32 = $(STACKTRACE_TESTS)
-XFAIL_TESTS = $(XFAIL_TESTS_$(MPERS_NAME)) $(XFAIL_TESTS_$(ARCH))
+XFAIL_TESTS = $(XFAIL_TESTS_$(MPERS_NAME)) $(XFAIL_TESTS_$(ARCH)) $(TIME64_XFAIL)
 TEST_LOG_COMPILER = env
 AM_TEST_LOG_FLAGS = STRACE_ARCH=$(ARCH) STRACE_NATIVE_ARCH=$(NATIVE_ARCH) \
 			SIZEOF_KERNEL_LONG_T=$(SIZEOF_KERNEL_LONG_T) \
Index: strace-5.9/tests-mx32/Makefile.in
===================================================================
--- strace-5.9.orig/tests-mx32/Makefile.in	2020-10-06 09:48:47.323672772 +0200
+++ strace-5.9/tests-mx32/Makefile.in	2020-10-22 04:35:09.438944519 +0200
@@ -6780,10 +6780,30 @@
 	umovestr_cached.test \
 	# end of MISC_TESTS
 
+
+# A temporary workaround for glibc commits
+# 9ebaabeaac1a96b0d91f52902ce1dbf4f5a562dd
+# be9b0b9a012780a403a266c90878efffb9a5f3ca
+# a16d2abd496bd974a88207d5599265aae5ae4880
+TIME64_XFAIL = \
+	ipc_msg.gen.test \
+	ipc_msg-Xabbrev.gen.test \
+	ipc_msg-Xraw.gen.test \
+	ipc_msg-Xverbose.gen.test \
+	ipc_sem.gen.test \
+	ipc_sem-Xabbrev.gen.test \
+	ipc_sem-Xraw.gen.test \
+	ipc_sem-Xverbose.gen.test \
+	ipc_shm.gen.test \
+	ipc_shm-Xabbrev.gen.test \
+	ipc_shm-Xraw.gen.test \
+	ipc_shm-Xverbose.gen.test \
+	# end of TIME64_XFAIL
+
 XFAIL_TESTS_ = 
 XFAIL_TESTS_m32 = $(STACKTRACE_TESTS)
 XFAIL_TESTS_mx32 = $(STACKTRACE_TESTS)
-XFAIL_TESTS = $(XFAIL_TESTS_$(MPERS_NAME)) $(XFAIL_TESTS_$(ARCH))
+XFAIL_TESTS = $(XFAIL_TESTS_$(MPERS_NAME)) $(XFAIL_TESTS_$(ARCH)) $(TIME64_XFAIL)
 TEST_LOG_COMPILER = env
 AM_TEST_LOG_FLAGS = STRACE_ARCH=$(ARCH) STRACE_NATIVE_ARCH=$(NATIVE_ARCH) \
 			SIZEOF_KERNEL_LONG_T=$(SIZEOF_KERNEL_LONG_T) \
Index: strace-5.9/tests/Makefile.in
===================================================================
--- strace-5.9.orig/tests/Makefile.in	2020-10-06 09:47:53.610143253 +0200
+++ strace-5.9/tests/Makefile.in	2020-10-22 04:35:00.113030124 +0200
@@ -6780,10 +6780,30 @@
 	umovestr_cached.test \
 	# end of MISC_TESTS
 
+
+# A temporary workaround for glibc commits
+# 9ebaabeaac1a96b0d91f52902ce1dbf4f5a562dd
+# be9b0b9a012780a403a266c90878efffb9a5f3ca
+# a16d2abd496bd974a88207d5599265aae5ae4880
+TIME64_XFAIL = \
+	ipc_msg.gen.test \
+	ipc_msg-Xabbrev.gen.test \
+	ipc_msg-Xraw.gen.test \
+	ipc_msg-Xverbose.gen.test \
+	ipc_sem.gen.test \
+	ipc_sem-Xabbrev.gen.test \
+	ipc_sem-Xraw.gen.test \
+	ipc_sem-Xverbose.gen.test \
+	ipc_shm.gen.test \
+	ipc_shm-Xabbrev.gen.test \
+	ipc_shm-Xraw.gen.test \
+	ipc_shm-Xverbose.gen.test \
+	# end of TIME64_XFAIL
+
 XFAIL_TESTS_ = 
 XFAIL_TESTS_m32 = $(STACKTRACE_TESTS)
 XFAIL_TESTS_mx32 = $(STACKTRACE_TESTS)
-XFAIL_TESTS = $(XFAIL_TESTS_$(MPERS_NAME)) $(XFAIL_TESTS_$(ARCH))
+XFAIL_TESTS = $(XFAIL_TESTS_$(MPERS_NAME)) $(XFAIL_TESTS_$(ARCH)) $(TIME64_XFAIL)
 TEST_LOG_COMPILER = env
 AM_TEST_LOG_FLAGS = STRACE_ARCH=$(ARCH) STRACE_NATIVE_ARCH=$(NATIVE_ARCH) \
 			SIZEOF_KERNEL_LONG_T=$(SIZEOF_KERNEL_LONG_T) \
